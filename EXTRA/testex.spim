.data
	base85: 		.asciiz    	"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.-:+=^!/*?&<>()[]{}@%$#"
	Pula_linha: 	.asciiz 	"\n"
	invalido: 		.asciiz  	"Entrada invalida.\n"
	string: 		.space 		100
	array:
			.align 		2 
			.space 		16 
.text

main:
	la $a0, string 
	la $a1, 300
	li $v0, 8	 
	syscall
	
	li $t1, 0
	
	la $a0, string
	
	verificaloop:
	
		addu $t3, $a0, $t1
		lb $t3, 0($t3)
		beq $t3, 10, sverifica
		
		addi $t1, $t1, 1
		j verificaloop
		
	sverifica:

		li $s7, 4
		div $t1, $s7
		mfhi $s6
	
		beqz $s6, verifica
	
		li $v0, 4
		la $a0, invalido
		syscall
	
		li $v0, 10
		syscall
	
	verifica:

	la $t0, string

	li $t1, 0
	
	li $t2, 0

	loop:
	
		la $a0, string
		add $t3, $a0, $t1
		lb $t3, 0($t3)
		beq $t3, 10, sair
		
		beq $t2, 1, seg
		beq $t2, 2, terc
		beq $t2, 3, quar

		sll $t4, $t3, 24
			
		add $t1, $t1, 1
		add $t2, $t2, 1
			
		j loop

		seg: 
			sll $t5, $t3, 16
			addu $t4, $t4, $t5

			addi $t1, $t1, 1
			addi $t2, $t2, 1

			j loop
	
		terc: 

			sll $t5, $t3, 8
			addu $t4, $t4, $t5 

			addi $t1, $t1, 1
			add $t2, $t2, 1

			j loop

		quar: 

			addu $t4, $t4, $t3 

			addi $t1, $t1, 1
			add $t2, $zero, $zero

			jal REST
			jal pr
			j loop

	sair:
	
	j volta
	
	REST:
	
	add $s0, $zero, $zero
	addi $s5, $zero, 85
	
	BR:
		
		slti $s1, $t4, 1
		beq $s1, 1, EE
		
		divu $t4, $s5
		mfhi $s2
		
		sw $s2, array($s0)
		
		addi $s0, $s0, 4
		mflo $t4
		
		j BR
	
	EE:
	
	jr $ra
	
	pr:
	
	addi $s0, $s0, -4
	
	fpr:
		
		slti $s1, $s0, 0
		beq $s1, 1, teste
		
		lw $t0, array($s0)
		
		la $a2, base85
		
		add $a2, $a2, $t0
		lb $a0, 0($a2)
		
		li $v0, 11
		syscall
		
		addi $s0, $s0, -4
		
		j fpr
	
	teste:
	
	jr $ra
	
	volta:
	
	li $v0, 4
	la $a0, Pula_linha
	syscall

	li $v0, 10
	syscall
     
     

     
