.data
	
	pula: 	.asciiz 	"\n"
	base85: 	.asciiz    	"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.-:+=^!/*?&<>()[]{}@%$#"
	invalida: 	.asciiz  	"Entrada invalida.\n"
	string: 	.space 		300
	rest_array:
			    .align 		2 
			    .space 		16 
.text

main:
	
	la $a0, string 
	la $a1, 300
	li $v0, 8	 
	syscall
	
	add $t1, $zero, $zero
	
	la $a0, string
	
	FCHECK:
		
		add $t3, $a0, $t1
		lbu $t3, 0($t3)
		beq $t3, 10, EXIT_CHECK
			
		addi $t1, $t1, 1
		j FCHECK
		
	EXIT_CHECK:

		addi $s7, $zero, 4
		div $t1, $s7
		mfhi $s6
	
		beqz $s6, CHECK
	
		li $v0, 4
		la $a0, invalida
		syscall
	
		li $v0, 10
		syscall
	
	CHECK:

		la $t0, string

		
		add $t1, $zero, $zero
		
		
		add $t2, $zero, $zero

	FOR:
		
		la $a0, string
		add $t3, $a0, $t1
		lbu $t3, 0($t3)
		beq $t3, 10, EXIT
		
		beq $t2, 1, segundo
		beq $t2, 2, terceiro
		beq $t2, 3, FORTH

			
			sll $t4, $t3, 24
			
			addi $t1, $t1, 1
			addi $t2, $t2, 1
			
			j FOR

		segundo: 
			
			sll $t5, $t3, 16
			addu $t4, $t4, $t5
			
			addi $t1, $t1, 1
			addi $t2, $t2, 1

			j FOR

		terceiro: 

			sll $t5, $t3, 8
			addu $t4, $t4, $t5 

			addi $t1, $t1, 1
			add $t2, $t2, 1
			
			j FOR

		FORTH: 
			
			addu $t4, $t4, $t3 

			addi $t1, $t1, 1
			add $t2, $zero, $zero

			jal REST
			jal PRINT
			j FOR

	EXIT:
		j retorna
	
	REST:
	
		add $s0, $zero, $zero
		
		
		addi $s5, $zero, 85
	
	frest:
		
		slti $s1, $t4, 1
		beq $s1, 1, sairest
		
		
		divu $t4, $s5
		mfhi $s2
		
		
		sw $s2, rest_array($s0)
		
		
		addi $s0, $s0, 4
		mflo $t4
		
		j frest
	
	sairest:
		
		jr $ra
	
	PRINT:
	
		addi $s0, $s0, -4
	
	FOR_PRINT:
		
		slti $s1, $s0, 0
		beq $s1, 1, sairprint
		
		lw $t0, rest_array($s0)
		
		la $a2, base85
		
		addu $a2, $a2, $t0
		lbu $a0, ($a2)
		
		
		li $v0, 11
		syscall
		
		addi $s0, $s0, -4
		
		j FOR_PRINT
	
	sairprint:
	
	jr $ra
	
	retorna:
	
	li $v0, 4
	la $a0, pula
	syscall

	li $v0, 10
	syscall
     
